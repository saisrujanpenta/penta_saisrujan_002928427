/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import model.UberCars;
import model.CarCatalog;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author saisr
 */
public class FilteredResultsTable extends javax.swing.JPanel {
    private JPanel SelectActionPanel;
    private CarCatalog CarCatalog;
    private ArrayList<UberCars> UberCarsList;
    private ArrayList<UberCars> TemporaryList;
    
    
    private int MinSeats;
    private int MaxSeats;


    FilteredResultsTable(JPanel SelectActionPlane, ArrayList<UberCars> result, CarCatalog CarCatalog) {
        initComponents();
        this.SelectActionPanel = SelectActionPlane;
        this.UberCarsList = result;
        this.CarCatalog = CarCatalog;
        populateTable();
    }

   

    
    private void populateTable(){
            DefaultTableModel dtm = (DefaultTableModel) tblDetails.getModel();
            dtm.setRowCount(0);
            for (UberCars uber : UberCarsList){
                Object[] row = new Object [9];
                row [0] = uber;
                row [1] = uber.getYearofManufacture();
                row [2] = uber.getMaxSeats();
                row [3] = uber.getMinSeats();
                row [4] = uber.getSerialNumber();
                row [5] = uber.getModelNumber();
                row [6] = uber.getAvailableCity();
                row [7] = uber.isAvailability();
                row [8] = uber.isMaintainanceCertificate();
                
                dtm.addRow(row);
                                 
    }
            int n = dtm.getRowCount();
            txtCount.setText((String.valueOf(n)));
         
    }
   
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();
        btnBack3 = new javax.swing.JButton();
        txtCount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(178, 215, 214));

        tblDetails.setBackground(new java.awt.Color(204, 204, 204));
        tblDetails.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand ", "Year of Manufacture", "Maximum Seats", "Minimum Seats", "Serial Number", "Model Number", "Available City", "Available", "Main. Certi. Availability Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetails);

        btnBack3.setBackground(new java.awt.Color(153, 153, 153));
        btnBack3.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        btnBack3.setText("Back");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        txtCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        jLabel2.setText("Count :");

        btnView.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("FILTERED RESULTS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack3)
                .addGap(39, 39, 39)
                .addComponent(jLabel3)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnView))
                .addContainerGap(387, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        SelectActionPanel.remove(this);
        CardLayout layout = (CardLayout) SelectActionPanel.getLayout();
        layout.previous(SelectActionPanel);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void txtCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDetails.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from Table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            UberCars uber = (UberCars) tblDetails.getValueAt((selectedRow), 0);
            ViewCarDetails amPanel = new ViewCarDetails (SelectActionPanel, uber);
            SelectActionPanel.add("ViewCarDetails",amPanel);
            CardLayout layout = (CardLayout) SelectActionPanel.getLayout();
            layout.next(SelectActionPanel);
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTextField txtCount;
    // End of variables declaration//GEN-END:variables

    void populateTable(CarCatalog uberCatalog, String all) {
         DefaultTableModel dtm = (DefaultTableModel) tblDetails.getModel();
            dtm.setRowCount(0);
            for (UberCars ubercars : UberCarsList){
                Object[] row = new Object [9];
                row [0] = ubercars;
                row [1] = ubercars.getYearofManufacture();
                row [2] = ubercars.getMaxSeats();
                row [3] = ubercars.getMinSeats();
                row [4] = ubercars.getSerialNumber();
                row [5] = ubercars.getModelNumber();
                row [6] = ubercars.getAvailableCity();
                row [7] = ubercars.isAvailability();
                row [8] = ubercars.isMaintainanceCertificate();
                
                dtm.addRow(row);
                                 
    }
        
    }

}